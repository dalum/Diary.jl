var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [Diary]\nOrder = [:function, :type]","category":"page"},{"location":"api/#Diary.configure-Tuple{}","page":"API Reference","title":"Diary.configure","text":"configure(; kwargs...)\n\nChange configuration for Diary.jl in the current session.\n\nSupported keywords\n\nauthor: Author name put in the header.  (default: \"\")\ndate_format: Dates.formatâ€“compatible date format used in the header.  (default: \"E U d HH:MM\")\ndiary_file_name: Default name of the diary file.  (default: \"diary.jl\")\n\nnote: Note\nIf ENV[\"JULIA_DIARY\"] is set, the diary file name will be ignored.\n\n\n\n\n\n","category":"method"},{"location":"api/#Diary.find_diary","page":"API Reference","title":"Diary.find_diary","text":"find_diary(previous_diary_file=nothing)\n\nLocate the diary file.  If previous_diary_file is nothing or is different from the located diary file, also set the global write_header flag to true.\n\n\n\n\n\n","category":"function"},{"location":"api/#Diary.parse_history-Tuple{Any}","page":"API Reference","title":"Diary.parse_history","text":"parse_history(history_lines)\n\nParse the lines in history_lines, strip trailing semi-colons, and determine if they should be written to the diary based on the mode in which they were entered.\n\n\n\n\n\n","category":"method"},{"location":"api/#Diary.start_watching-Tuple","page":"API Reference","title":"Diary.start_watching","text":"start_watching(args...)\n\nCreate and schedule a watch_task with the given args.  See also watch_task.\n\n\n\n\n\n","category":"method"},{"location":"api/#Diary.watch_task","page":"API Reference","title":"Diary.watch_task","text":"watch_task(history_file, repl_history_file=nothing)\n\nStart watching the history file at filepath history_file for changes, and parse those changes to update the diary.  If repl_history_file is set to a value other than nothing, also copy changes to repl_history_file.\n\n\n\n\n\n","category":"function"},{"location":"api/#Diary.write_header-Tuple{Any}","page":"API Reference","title":"Diary.write_header","text":"write_header(io)\n\nWrite a header to the IO stream, io.\n\n\n\n\n\n","category":"method"},{"location":"api/#Diary.DiaryConfig","page":"API Reference","title":"Diary.DiaryConfig","text":"DiaryConfig\n\nMutable configuration for Diary.jl.  Diary.jl contains a single global instance of this type, GLOBAL_CONFIG.  Configuration of Diary.jl should be done through configure rather than direct manipulations of GLOBAL_CONFIG.\n\n\n\n\n\n","category":"type"},{"location":"api/#Diary.TaskThunk","page":"API Reference","title":"Diary.TaskThunk","text":"thunk = TaskThunk(f, args)\n\nTo facilitate precompilation and reduce latency, we avoid creation of anonymous thunks. thunk can be used as an argument in schedule(Task(thunk)).  Adapted from Revise.\n\n\n\n\n\n","category":"type"},{"location":"introduction/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Diary.jl is a workflow package designed to make it easier for you to access your REPL history.  It works by monitoring changes to your REPL history, and automatically placing lines that parse as valid Julia syntax into a diary.jl file in your current active project.  To prevent accidental cluttering, however, this is not done for the default ~/.julia/environments/vX.Y/ environments.","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Diary.jl also keeps track of when you change your active project, and automatically switches to the associated diary file.  By default, the diary file is called diary.jl, but this can be changed by calling Diary.configure(diary_file_name=\"<name>\").  Both of these behaviours are overridden if the environment variable, JULIA_DIARY, is set.  JULIA_DIARY specifies the desired location and name of the diary file for the session and can be changed at any time by setting ENV[\"JULIA_DIARY\"] = \"path/to/file\".  To disable it, remove the environment variable by calling: delete!(ENV, \"JULIA_DIARY\").","category":"page"},{"location":"#Diary.jl","page":"Index","title":"Diary.jl","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"Welcome to the documentation for Diary.jl!","category":"page"},{"location":"","page":"Index","title":"Index","text":"This document is intended to help you get started with using the package. If you have any suggestions, please open an issue or pull request on GitHub.","category":"page"}]
}
